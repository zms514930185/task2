<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jnshu.mapper.StudentMapper">
    <resultMap id="BaseResultMap" type="com.jnshu.model.Student">
        <id column="ID" jdbcType="BIGINT" property="id"/>
        <result column="student_id" jdbcType="BIGINT" property="studentId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="qq" jdbcType="BIGINT" property="qq"/>
        <result column="career" jdbcType="VARCHAR" property="career"/>
        <result column="data" jdbcType="BIGINT" property="data"/>
        <result column="school" jdbcType="VARCHAR" property="school"/>
        <result column="link" jdbcType="VARCHAR" property="link"/>
        <result column="declaration" jdbcType="VARCHAR" property="declaration"/>
        <result column="brother" jdbcType="VARCHAR" property="brother"/>
        <result column="create_at" jdbcType="BIGINT" property="createAt"/>
        <result column="update_at" jdbcType="BIGINT" property="updateAt"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from student
    where ID = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insertStudent" parameterType="Student" useGeneratedKeys="true" keyProperty="id">
    insert into student (ID, student_id, name,
      qq, career, data, school, 
      link, declaration, brother, 
      create_at, update_at)
    values (#{id,jdbcType=BIGINT}, #{studentId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, 
      #{qq,jdbcType=BIGINT}, #{career,jdbcType=VARCHAR}, #{data,jdbcType=BIGINT}, #{school,jdbcType=VARCHAR}, 
      #{link,jdbcType=VARCHAR}, #{declaration,jdbcType=VARCHAR}, #{brother,jdbcType=VARCHAR}, 
      #{createAt,jdbcType=BIGINT}, #{updateAt,jdbcType=BIGINT})
  </insert>
    <update id="updateStudent" parameterType="Student">
        update student
        <set>
            <if test="studentId != null and studentId !=''">student_id = #{studentId,jdbcType=BIGINT},</if>
            <if test="name != null and name !=''">name = #{name,jdbcType=VARCHAR},</if>
            <if test="qq != null and qq !=''">qq = #{qq,jdbcType=BIGINT},</if>
            <if test="career !=null and career !=''">career = #{career,jdbcType=VARCHAR},</if>
            <if test="data !=null and data !=''">data = #{data,jdbcType=BIGINT},</if>
            <if test="school !=null and school !=''">school = #{school,jdbcType=VARCHAR},</if>
            <if test="link !=null and link !=''">link = #{link,jdbcType=VARCHAR},</if>
            <if test="declaration !=null and declaration !=''">declaration = #{declaration,jdbcType=VARCHAR},</if>
            <if test="brother !=null and brother !=''">brother = #{brother,jdbcType=VARCHAR},</if>
            <if test="updateAt !=null and updateAt !=''">update_at = #{updateAt,jdbcType=BIGINT},</if>
        </set>
        where ID = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select ID, student_id, name, qq, career, data, school, link, declaration, brother, 
    create_at, update_at
    from student
    where ID = #{id,jdbcType=BIGINT}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select ID, student_id, name, qq, career, data, school, link, declaration, brother, 
    create_at, update_at
    from student
  </select>
    <select id="selectCount" resultType="java.lang.Long">
        select count(id) from student
        <trim prefix="WHERE" prefixOverrides="AND|OR ">
            <if test="id != null and id !=''">ID=#{id}</if>
            <if test="studentId != null and studentId !=''">and student_id=#{studentId}</if>
            <if test="name != null and name !=''">and name LIKE CONCAT('%',#{name},'%')</if>
            <if test="qq != null and qq !=''">and qq LIKE CONCAT('%',#{qq},'%')</if>
            <if test="career !=null and career !=''">and career LIKE CONCAT('%',#{career},'%')</if>
            <if test="data !=null and data !=''">and data = #{data}</if>
            <if test="school !=null and school !=''">and school LIKE CONCAT('%',#{school},'%')</if>
            <if test="link !=null and link !=''">and link = #{link}</if>
            <if test="declaration !=null and declaration !=''">and declaration = #{declaration}</if>
            <if test="brother !=null and brother !=''">and brother LIKE CONCAT('%',#{brother},'%')</if>
            <if test="createAt !=null and createAt !=''">and create_at = #{createAt}</if>
            <if test="updateAt !=null and updateAt !=''">and update_at = #{updateAt}</if>
        </trim>
    </select>
    <!--查询记录，名字，职业，QQ，学校，师兄是模糊查询-->
    <select id="selectStudent" parameterType="java.util.Map" resultType="Student">
        select ID as id,student_id as studentId,name,qq,career,data,school,link,declaration,brother,create_at as
        createAt,update_at as updateAt from student
        <trim prefix="WHERE" prefixOverrides="AND|OR ">
            <if test="id != null and id !=''">ID=#{id}</if>
            <if test="studentId != null and studentId !=''">and student_id=#{studentId}</if>
            <if test="name != null and name !=''">and name LIKE CONCAT('%',#{name},'%')</if>
            <if test="qq != null and qq !=''">and qq LIKE CONCAT('%',#{qq},'%')</if>
            <if test="career !=null and career !=''">and career LIKE CONCAT('%',#{career},'%')</if>
            <if test="data !=null and data !=''">and data = #{data}</if>
            <if test="school !=null and school !=''">and school LIKE CONCAT('%',#{school},'%')</if>
            <if test="link !=null and link !=''">and link = #{link}</if>
            <if test="declaration !=null and declaration !=''">and declaration = #{declaration}</if>
            <if test="brother !=null and brother !=''">and brother LIKE CONCAT('%',#{brother},'%')</if>
            <if test="createAt !=null and createAt !=''">and create_at = #{createAt}</if>
            <if test="updateAt !=null and updateAt !=''">and update_at = #{updateAt}</if>
        </trim>
        limit #{Start},#{size}
    </select>
</mapper>